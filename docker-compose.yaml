version: '2.1'

volumes:
  urbit:
  netdatacache:
  netdatalib:
  minio:
  nginx:
services:
  nginx:
    build: ./nginx
    restart: 'unless-stopped'
    ports:
     - "80:80"
     - "443:443"
    depends_on: ["minio-s3", "netdata", "urbit"]
  # The following command will start the nginx container and let it idle. That way,
  # we can ssh into the container and shange the nginx configuration files.
  # command: ["tail", "-f", "/dev/null"]
  minio-s3:
    build: ./minio
    restart: 'unless-stopped'
    volumes: 
      - minio:/data
    ports: 
      - "9000:9000"
 # Urbit will automatically bind port 80. We bind the container's port 80 to the host's port 8080. 
 # That way, we run nginx reverse-proxy and urbit in parallel.  
  urbit:
    build: ./urbit
    privileged: false
    restart: 'unless-stopped'
    volumes:
      - urbit:/urbit
    ports:
      - "34343:34343/udp"
      - "8080:80"
    depends_on: ["minio-s3"]
  netdata:
    build: ./netdata
    privileged: true
    ports:
      - '19999:19999'
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    labels:
      io.balena.features.balena-socket: 1
      io.balena.features.procfs: 1
      io.balena.features.supervisor-api: 1
      io.balena.features.sysfs: 1
    volumes:
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata