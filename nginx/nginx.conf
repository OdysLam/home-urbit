# Set another default user than root for security reasons
user nginx;

# As a thumb rule: One per CPU. If you are serving a large amount
# of static files, which requires blocking disk reads, you may want
# to increase this from the number of cpu_cores available on your
# system.
#
# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_connections
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

# Maximum file descriptors that can be opened per process
# This should be > worker_connections
worker_rlimit_nofile 8192;

events {
  # When you need > 8000 * cpu_cores connections, you start optimizing
  # your OS, and this is probably the point at where you hire people
  # who are smarter than you, this is *a lot* of requests.
  worker_connections  8000;

  # This sets up some smart queueing for accept(2)'ing requests
  # Set it to "on" if you have > worker_processes
  accept_mutex off;

  # These settings are OS specific, by defualt Nginx uses select(2),
  # however, for a large number of requests epoll(2) and kqueue(2)
  # are generally faster than the default (select(2))
  # use epoll; # enable for Linux 2.6+
  # use kqueue; # enable for *BSD (FreeBSD, OS X, ..)
}

# Change these paths to somewhere that suits you!
error_log  /logs/error.log;
pid        /logs/nginx.pid;


http{

        # Includes mapping of file name extensions to MIME types of responses
        # and defines the default type.
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Name servers used to resolve names of upstream servers into addresses.
        # It's also needed when using tcpsocket and udpsocket in Lua modules.
        #resolver 208.67.222.222 208.67.220.220;

        # Don't tell nginx version to clients.
        server_tokens off;

        # Specifies the maximum accepted body size of a client request, as
        # indicated by the request header Content-Length. If the stated content
        # length is greater than this size, then the client receives the HTTP
        # error code 413. Set to 0 to disable.
        client_max_body_size 1m;
  

  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log   /logs/access.log  main;
  # Click tracking!


  # ~2 seconds is often enough for HTML/CSS, but connections in
  # Nginx are cheap, so generally it's safe to increase it
  keepalive_timeout  5;

  # You usually want to serve static files with Nginx
  sendfile on;

  tcp_nopush on; # off may be better for Comet/long-poll stuff
  tcp_nodelay off; # on may be better for Comet/long-poll stuff

 

  server {
      listen 80;
      listen [::]:80;
      location / {
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass_request_headers on;
        proxy_set_header Connection "keep-alive";
        # proxy_store off;
        # proxy_set_header Forwarded for=$remote_addr;
        # proxy_set_header Connection '';
        chunked_transfer_encoding off;
        proxy_buffering off;
        proxy_cache off;
        proxy_pass http://urbit-main$is_args$args;

      }

      # location ~ /urbit/(?<urbitname>.*?)/ {
      #   proxy_set_header Host $host;
      #   proxy_set_header X-Forwarded-Host $host;
      #   proxy_set_header X-Forwarded-Server $host;
      #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      #   proxy_pass_request_headers on;
      #   proxy_set_header Connection "keep-alive";
      #   # proxy_store off;
      #   # proxy_set_header Forwarded for=$remote_addr;
      #   # proxy_set_header Connection '';
      #   chunked_transfer_encoding off;
      #   proxy_buffering off;
      #   proxy_cache off;
      #   proxy_pass http://urbit-$urbitname/$is_args$args;
      # }
    location ~ /netdata/(?<ndpath>.*) {
        proxy_redirect off;
        proxy_set_header Host $host;
        
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_pass_request_headers on;
        proxy_set_header Connection "keep-alive";
        proxy_store off;
        proxy_pass http://netdata/$ndpath$is_args$args;
        gzip on;
        gzip_proxied any;
        gzip_types *;
        auth_basic "Restricted Content";
        auth_basic_user_file /etc/nginx/.htpasswd;
    }
    location ~ .(static)/(js|css|media)/(.+)$ {
		  try_files $uri $uri/ /$1/$2/$3;
	}
    location ~ /minio/(?<miniopath>.*) {
        proxy_redirect off;
        proxy_set_header Host $host;

        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_pass_request_headers on;
        proxy_set_header Connection "keep-alive";
        proxy_store off;
        proxy_pass http://minio-s3$ndpath$is_args$args;
        gzip on;
        gzip_proxied any;
        gzip_types *;
    }
    # We had an issue with redirects, propably because it was a regex here. 
    location  /minio {
        return 301 /minio/;
    }
    location  /netdata {
        return 301 /netdata/;
    }
    # The problem with redirects for urbit here was *? instead of  *
    # location ~ /urbit/(?<urbitname>.*){
    #     return 301 /urbit/$urbitname/;
    # }
    # # make sure there is a trailing slash at the browser
    # # or the URLs will be wrong  
    }
    upstream netdata{
    server netdata:19999;
    keepalive 64;
    }
    upstream urbit-main {
      server urbit;
      keepalive 64;
    }
    upstream minio-s3 {
        server minio-s3:9000;
        keepalive 64;
    }
}